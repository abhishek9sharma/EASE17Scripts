Keystone Configuration
 For secure operation of the Monasca API, the API must be configured to use Keystone in the configuration file under the middleware section. Monasca only works with a Keystone v3 server. The important parts of the configuration are explained below: serverVIP - This is the hostname or IP Address of the Keystone server
serverPort - The port for the Keystone server
useHttps - Whether to use https when making requests of the Keystone API
truststore - If useHttps is true and the Keystone server is not using a certificate signed by a public CA recognized by Java, the CA certificate can be placed in a truststore so the Monasca API will trust it, otherwise it will reject the https connection. This must be a JKS truststore
truststorePassword - The password for the above truststore
connSSLClientAuth - If the Keystone server requires the SSL client used by the Monasca server to have a specific client certificate, this should be true, false otherwise
keystore - The keystore holding the SSL Client certificate if connSSLClientAuth is true
keystorePassword - The password for the keystore
defaultAuthorizedRoles - An array of roles that authorize a user to access the complete Monasca API. User must have at least one of these roles. See below
readOnlyAuthorizedRoles - An array of roles that authorize a user to only GET (but not POST, PUT...) metrics.  See Keystone Roles below
agentAuthorizedRoles - An array of roles that authorize only the posting of metrics.  See Keystone Roles below
adminAuthMethod - "password" if the Monasca API should adminUser and adminPassword to login to the Keystone server to check the user's token, "token" if the Monasca API should use adminToken
adminUser - Admin user name
adminPassword - Admin user password
adminProjectId - Specify the project ID the api should use to request an admin token. Defaults to the admin user's default project. The adminProjectId option takes precedence over adminProjectName.
adminProjectName - Specify the project name the api should use to request an admin token. Defaults to the admin user's default project. The adminProjectId option takes precedence over adminProjectName.
adminToken - A valid admin user token if adminAuthMethod is token
timeToCacheToken - How long the Monasca API should cache the user's token before checking it again